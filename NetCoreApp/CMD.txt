publish for rpi3
dotnet publish -r linux-arm
dotnet publish -r linux-arm --self-contained -f netcoreapp2.0

run manually on rpi3
cd /home/pi/Desktop/publish
chmod 755 ./netcoreapp
sudo ./netcoreapp

autostart bash script on login (via cron)
So here are the steps to for running cron job at reboot :-
log in to your pi using ssh
switch to root user using sudo bash
run the command crontab -e
put your command as @reboot bash /path/to/file/run.sh save it and get back on terminal
then start cron service by running /etc/init.d/cron start
then one additional step is to edit the /etc/rc.local file and add the following line in /etc/init.d/cron/start  
be sure that it should before exit 0.
now reboot your system by command reboot
and now your cron job is started you can check it by command ps aux | grep cron
also you can check the log tail /var/log/syslog.

enable netbios on raspberry
To get your Raspberry Pi to show it's hostname on a windows network you need to first enable NetBIOS over TCP/IP on your nic. To do this right click on the network connection and selection properties. Select Internet Protocol Version 4 (TCP/IPv4) and click the properties button. In the next dialog click on the advanced button which will bring up the Advanced TCP/IP dialog. Select the WINS tab and enable NetBIOS over TCP/IP.
On the Raspberry Pi you need to install samba and winbind
$ sudo apt-get install samba
$ sudo apt-get install winbind
Edit /etc/nsswitch.conf to enable wins
change 'hosts: files dns' TO 'hosts: files wins dns'
To change the hostname
edit /etc/hostname
FYI 'raspberrypi' works just fine as a host name
$ sudo reboot

sudo apt-get install network-manager
CONNECT TO WIFI
nmcli device wifi rescan
nmcli device wifi list
nmcli device wifi connect TP-LINK_49F0F6 password luckyblack iface wlan0
nmcli device wifi connect "Lumia 650 6630" password gdalumia1
GET LIST OF WIFI
nmcli dev wifi

CONNECT TO WIFI
sudo -i
cd /etc/wpa_supplicant
wpa_passphrase TP-LINK_49F0F6 luckyblack >> wpa_supplicant.conf
sudo systemctl reboot

GET LIST OF WIFI
wpa_cli -i wlan0 disconnect
wpa_cli -i wlan0 scan
wpa_cli -i wlan0 scan_results








sudo -i
cd /etc/wpa_supplicant
wpa_passphrase TP-LINK_49F0F6 luckyblack >> wpa_supplicant.conf
sudo systemctl reboot
exit
sudo systemctl restart networking.service
sudo systemctl enable wpa_supplicant.service

sudo service network-manager stop
sudo service network-manager start